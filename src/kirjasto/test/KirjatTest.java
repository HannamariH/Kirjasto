package kirjasto.test;
// Generated by ComTest BEGIN
import java.util.List;
import java.io.File;
import java.util.Iterator;
import static org.junit.Assert.*;
import org.junit.*;
import kirjasto.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2019.04.26 09:39:51 // Generated by ComTest
 *
 */
@SuppressWarnings("all")
public class KirjatTest {



  // Generated by ComTest BEGIN
  /** testLisaa42 */
  @Test
  public void testLisaa42() {    // Kirjat: 42
    Kirjat kirjat = new Kirjat(); 
    Kirja sinuhe1 = new Kirja(), sinuhe2 = new Kirja(); 
    assertEquals("From: Kirjat line: 45", 0, kirjat.getLkm()); 
    kirjat.lisaa(sinuhe1); assertEquals("From: Kirjat line: 46", 1, kirjat.getLkm()); 
    kirjat.lisaa(sinuhe2); assertEquals("From: Kirjat line: 47", 2, kirjat.getLkm()); 
    kirjat.lisaa(sinuhe1); assertEquals("From: Kirjat line: 48", 3, kirjat.getLkm()); 
    assertEquals("From: Kirjat line: 49", sinuhe1, kirjat.anna(0)); 
    assertEquals("From: Kirjat line: 50", sinuhe2, kirjat.anna(1)); 
    assertEquals("From: Kirjat line: 51", sinuhe1, kirjat.anna(2)); 
    assertEquals("From: Kirjat line: 52", false, kirjat.anna(1) == sinuhe1); 
    assertEquals("From: Kirjat line: 53", true, kirjat.anna(1) == sinuhe2); 
    try {
    assertEquals("From: Kirjat line: 54", sinuhe1, kirjat.anna(3)); 
    fail("Kirjat: 54 Did not throw IndexOutOfBoundsException");
    } catch(IndexOutOfBoundsException _e_){ _e_.getMessage(); }
    kirjat.lisaa(sinuhe1); assertEquals("From: Kirjat line: 55", 4, kirjat.getLkm()); 
    kirjat.lisaa(sinuhe1); assertEquals("From: Kirjat line: 56", 5, kirjat.getLkm()); 
    kirjat.lisaa(sinuhe1); 
    kirjat.lisaa(sinuhe1); 
    kirjat.lisaa(sinuhe1); 
    kirjat.lisaa(sinuhe1); 
    kirjat.lisaa(sinuhe1); 
    kirjat.lisaa(sinuhe1); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testKorvaaTaiLisaa84 
   * @throws CloneNotSupportedException when error
   */
  @Test
  public void testKorvaaTaiLisaa84() throws CloneNotSupportedException {    // Kirjat: 84
    Kirjat kirjat = new Kirjat(); 
    Kirja kirja1 = new Kirja(); 
    Kirja kirja2 = new Kirja(); 
    kirja1.rekisteroi(); 
    kirja2.rekisteroi(); 
    assertEquals("From: Kirjat line: 91", 0, kirjat.getLkm()); 
    kirjat.korvaaTaiLisaa(kirja1); assertEquals("From: Kirjat line: 92", 1, kirjat.getLkm()); 
    kirjat.korvaaTaiLisaa(kirja2); assertEquals("From: Kirjat line: 93", 2, kirjat.getLkm()); 
    Kirja kirja3 = kirja1.clone(); 
    kirja3.aseta(2, "Romaani"); 
    assertEquals("From: Kirjat line: 96", true, kirjat.anna(0) == kirja1); 
    kirjat.korvaaTaiLisaa(kirja3); assertEquals("From: Kirjat line: 97", 2, kirjat.getLkm()); 
    assertEquals("From: Kirjat line: 98", true, kirjat.anna(0) == kirja3); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAnnaKirjaIdlla133 */
  @Test
  public void testAnnaKirjaIdlla133() {    // Kirjat: 133
    Kirjat kirjat = new Kirjat(); 
    Kirja kirja = new Kirja(); 
    kirja.setId(8); 
    kirjat.lisaa(kirja); 
    assertEquals("From: Kirjat line: 138", kirja, kirjat.annaKirjaIdlla(8)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testPoista185 */
  @Test
  public void testPoista185() {    // Kirjat: 185
    Kirjat kirjat = new Kirjat(); 
    Kirja k1 = new Kirja(); 
    Kirja k2 = new Kirja(); 
    Kirja k3 = new Kirja(); 
    k1.rekisteroi(); 
    k2.rekisteroi(); 
    k3.rekisteroi(); 
    int id1 = k1.getId(); 
    kirjat.lisaa(k1); kirjat.lisaa(k2); kirjat.lisaa(k3); 
    assertEquals("From: Kirjat line: 195", 1, kirjat.poista(id1 + 1)); 
    assertEquals("From: Kirjat line: 196", null, kirjat.annaKirjaIdlla(id1 + 1)); 
    assertEquals("From: Kirjat line: 197", 2, kirjat.getLkm()); 
    assertEquals("From: Kirjat line: 198", 1, kirjat.poista(id1)); assertEquals("From: Kirjat line: 198", 1, kirjat.getLkm()); 
    assertEquals("From: Kirjat line: 199", 0, kirjat.poista(id1+3)); assertEquals("From: Kirjat line: 199", 1, kirjat.getLkm()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testEtsi232 */
  @Test
  public void testEtsi232() {    // Kirjat: 232
    Kirjat kirjat = new Kirjat(); 
    Kirja k1 = new Kirja(); 
    k1.parse("1|3|Sinuhe Egyptil√§inen|2019"); 
    Kirja k2 = new Kirja(); 
    k2.parse("2|4|Rikosromaani|2008"); 
    Kirja k3 = new Kirja(); 
    k3.parse("3|7|Lastenkirja|2018"); 
    Kirja k4 = new Kirja(); 
    k4.parse("4|6|Keittokirja|1997"); 
    Kirja k5 = new Kirja(); 
    k5.parse("5|1|Raamattu|2000"); 
    kirjat.lisaa(k1); kirjat.lisaa(k2); kirjat.lisaa(k3); kirjat.lisaa(k4); kirjat.lisaa(k5); 
    List<Kirja> loytyneet; 
    loytyneet = kirjat.etsi("*s*", 2); 
    assertEquals("From: Kirjat line: 248", 3, loytyneet.size()); 
    assertEquals("From: Kirjat line: 249", true, loytyneet.get(0) == k3); 
    assertEquals("From: Kirjat line: 250", true, loytyneet.get(1) == k2); 
    assertEquals("From: Kirjat line: 251", true, loytyneet.get(2) == k1); 
    loytyneet = kirjat.etsi("*19*", 3); 
    assertEquals("From: Kirjat line: 253", 2, loytyneet.size()); 
    assertEquals("From: Kirjat line: 254", true, loytyneet.get(0) == k4); 
    assertEquals("From: Kirjat line: 255", true, loytyneet.get(1) == k1); 
    loytyneet = kirjat.etsi(null,-1); 
    assertEquals("From: Kirjat line: 257", 5, loytyneet.size()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testLueTiedosto345 
   * @throws SailoException when error
   */
  @Test
  public void testLueTiedosto345() throws SailoException {    // Kirjat: 345
    Kirjat kirjat = new Kirjat(); 
    Kirja kirja1 = new Kirja(), kirja2 = new Kirja(); 
    kirja1.taytaSinuhe(1); 
    kirja2.taytaSinuhe(1); 
    String hakemisto = "testikirjasto"; 
    String tiedNimi = hakemisto + "/kirjat"; 
    File ftied = new File(tiedNimi + ".dat"); 
    File dir = new File(hakemisto); 
    dir.mkdir(); 
    ftied.delete(); 
    try {
    kirjat.lueTiedosto(tiedNimi); 
    fail("Kirjat: 360 Did not throw SailoException");
    } catch(SailoException _e_){ _e_.getMessage(); }
    kirjat.lisaa(kirja1); 
    kirjat.lisaa(kirja2); 
    kirjat.tallenna(); 
    kirjat = new Kirjat(); 
    kirjat.lueTiedosto(tiedNimi); 
    assertEquals("From: Kirjat line: 366", kirja1.toString(), kirjat.anna(0).toString()); 
    assertEquals("From: Kirjat line: 367", kirja2.toString(), kirjat.anna(1).toString()); 
    kirjat.lisaa(kirja2); 
    kirjat.tallenna(); 
    assertEquals("From: Kirjat line: 370", true, ftied.delete()); 
    File fbak = new File(tiedNimi + ".bak"); 
    assertEquals("From: Kirjat line: 372", true, fbak.delete()); 
    assertEquals("From: Kirjat line: 373", true, dir.delete()); 
  } // Generated by ComTest END
}
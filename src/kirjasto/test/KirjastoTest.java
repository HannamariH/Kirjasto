package kirjasto.test;
// Generated by ComTest BEGIN
import java.util.*;
import static org.junit.Assert.*;
import org.junit.*;
import kirjasto.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2019.04.26 09:53:12 // Generated by ComTest
 *
 */
@SuppressWarnings("all")
public class KirjastoTest {



  // Generated by ComTest BEGIN
  /** testLisaa158 */
  @Test
  public void testLisaa158() {    // Kirjasto: 158
    Kirjasto kirjasto = new Kirjasto(); 
    Tekija tekija = new Tekija(); 
    tekija.rekisteroi(); 
    tekija.taytaWaltari(); 
    kirjasto.lisaa(tekija); 
    Kirja sinuhe1 = new Kirja(), sinuhe2 = new Kirja(); 
    sinuhe1.rekisteroi(); sinuhe2.rekisteroi(); 
    assertEquals("From: Kirjasto line: 166", 0, kirjasto.getKirjoja()); 
    kirjasto.lisaa(sinuhe1); assertEquals("From: Kirjasto line: 167", 1, kirjasto.getKirjoja()); 
    kirjasto.lisaa(sinuhe2); assertEquals("From: Kirjasto line: 168", 2, kirjasto.getKirjoja()); 
    kirjasto.lisaa(sinuhe1); assertEquals("From: Kirjasto line: 169", 3, kirjasto.getKirjoja()); 
    assertEquals("From: Kirjasto line: 170", 3, kirjasto.getKirjoja()); 
    assertEquals("From: Kirjasto line: 171", sinuhe1, kirjasto.annaKirja(0)); 
    assertEquals("From: Kirjasto line: 172", sinuhe2, kirjasto.annaKirja(1)); 
    assertEquals("From: Kirjasto line: 173", sinuhe1, kirjasto.annaKirja(2)); 
    try {
    assertEquals("From: Kirjasto line: 174", sinuhe1, kirjasto.annaKirja(3)); 
    fail("Kirjasto: 174 Did not throw IndexOutOfBoundsException");
    } catch(IndexOutOfBoundsException _e_){ _e_.getMessage(); }
    kirjasto.lisaa(sinuhe1); assertEquals("From: Kirjasto line: 175", 4, kirjasto.getKirjoja()); 
    kirjasto.lisaa(sinuhe1); assertEquals("From: Kirjasto line: 176", 5, kirjasto.getKirjoja()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testLisaa187 */
  @Test
  public void testLisaa187() {    // Kirjasto: 187
    Kirjasto kirjasto = new Kirjasto(); 
    Asiasana eka = new Asiasana(); 
    eka.lisaaEgypti(); 
    eka.rekisteroi(); 
    kirjasto.lisaa(eka); 
    Asiasana toka = new Asiasana(); 
    toka.lisaaEgypti(); 
    toka.rekisteroi(); 
    kirjasto.lisaa(toka); 
    assertEquals("From: Kirjasto line: 197", 2, kirjasto.getAsiasanoja()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testLisaaAsiasanaKirjalle210 */
  @Test
  public void testLisaaAsiasanaKirjalle210() {    // Kirjasto: 210
    Kirjasto kirjasto = new Kirjasto(); 
    Tekija tekija = new Tekija(); 
    tekija.rekisteroi(); 
    tekija.taytaWaltari(); 
    kirjasto.lisaa(tekija); 
    Kirja sinuhe1 = new Kirja(); 
    sinuhe1.rekisteroi(); 
    kirjasto.lisaa(sinuhe1); 
    Asiasana eka = new Asiasana(); 
    eka.lisaaEgypti(); 
    eka.rekisteroi(); 
    kirjasto.lisaa(eka); 
    Asiasana toka = new Asiasana(); 
    toka.lisaaEgypti(); 
    toka.rekisteroi(); 
    kirjasto.lisaa(toka); 
    kirjasto.lisaaAsiasanaKirjalle(sinuhe1, eka); 
    kirjasto.lisaaAsiasanaKirjalle(sinuhe1, toka); 
    assertEquals("From: Kirjasto line: 229", 2, kirjasto.getAsiasanaKirjaPareja()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testLisaa305 */
  @Test
  public void testLisaa305() {    // Kirjasto: 305
    Kirjasto kirjasto = new Kirjasto(); 
    Tekija eka = new Tekija(); 
    eka.taytaWaltari(); 
    eka.rekisteroi(); 
    kirjasto.lisaa(eka); 
    Tekija toka = new Tekija(); 
    toka.taytaWaltari(); 
    toka.rekisteroi(); 
    kirjasto.lisaa(toka); 
    assertEquals("From: Kirjasto line: 315", 2, kirjasto.getTekijoita()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAnnaAsiasanat338 */
  @Test
  public void testAnnaAsiasanat338() {    // Kirjasto: 338
    Kirjasto kirjasto = new Kirjasto(); 
    Tekija tekija = new Tekija(); 
    tekija.rekisteroi(); 
    tekija.taytaWaltari(); 
    kirjasto.lisaa(tekija); 
    Kirja sinuhe1 = new Kirja(); 
    sinuhe1.rekisteroi(); 
    kirjasto.lisaa(sinuhe1); 
    Asiasana eka = new Asiasana(); 
    eka.lisaaEgypti(); 
    eka.rekisteroi(); 
    kirjasto.lisaa(eka); 
    Asiasana toka = new Asiasana(); 
    toka.lisaaEgypti(); 
    toka.rekisteroi(); 
    kirjasto.lisaa(toka); 
    kirjasto.lisaaAsiasanaKirjalle(sinuhe1, eka); 
    kirjasto.lisaaAsiasanaKirjalle(sinuhe1, toka); 
    assertEquals("From: Kirjasto line: 358", 2, kirjasto.getAsiasanaKirjaPareja()); 
    List<Asiasana> loytyneet; 
    loytyneet = kirjasto.annaAsiasanat(sinuhe1); 
    assertEquals("From: Kirjasto line: 362", eka, loytyneet.get(0)); 
    assertEquals("From: Kirjasto line: 363", 2, loytyneet.size()); 
  } // Generated by ComTest END
}